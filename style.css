<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Formulário e Lista</title>
  <style>
    /* Garantindo que toda a página tenha o fundo preto */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    /* Definindo o fundo preto para toda a página */
    body {
      font-family: Arial, sans-serif;
      background-color: #000; /* Fundo completamente preto */
      color: #fff; /* Texto branco */
      padding: 20px;
    }

    /* Estilizando o container para centralizar o conteúdo */
    .container {
      max-width: 600px;
      margin: 0 auto;
      background: #000; /* Fundo do container preto */
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }

    h1, h2 {
      color: #fff; /* Títulos em branco */
      margin-bottom: 15px;
    }

    form {
      margin-bottom: 20px;
    }

    label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
      color: #fff; /* Texto das labels em branco */
    }

    input[type="text"], input[type="number"], textarea, #search {
      width: 100%;
      padding: 10px;
      margin-bottom: 15px;
      border: 1px solid #444; /* Borda escura */
      border-radius: 5px;
      font-size: 16px;
      background-color: #222; /* Fundo escuro */
      color: #fff; /* Texto branco */
    }

    input[type="text"]:focus, input[type="number"]:focus, textarea:focus, #search:focus {
      border-color: #fff; /* Borda branca ao focar */
      outline: none;
    }

    button {
      display: inline-block;
      background: #fff; /* Fundo branco */
      color: #000; /* Texto preto */
      border: none;
      padding: 10px 15px;
      border-radius: 5px;
      cursor: pointer;
      font-size: 16px;
    }

    button:hover {
      background: #ddd; /* Cor de fundo mais escura quando o mouse passa */
    }

    .list {
      margin-top: 15px;
    }

    .list-item {
      padding: 10px;
      margin-bottom: 10px;
      background: #333; /* Fundo mais escuro para os itens da lista */
      border: 1px solid #444; /* Borda escura */
      border-radius: 5px;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .list-item p {
      margin: 0;
      color: #fff; /* Texto branco */
    }

    .delete-icon {
      cursor: pointer; /* Mostra que é clicável */
      width: 29px; /* Tamanho da imagem */
      height: 29px; /* Tamanho da imagem */
      object-fit: contain; /* Ajusta a proporção da imagem */
      transition: transform 0.2s ease-in-out; /* Efeito de aumento ao passar o mouse */
    }

    .delete-icon:hover {
      transform: scale(1.2); /* Aumenta a imagem ao passar o mouse */
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Gerenciador de Dados</h1>

    <form id="dataForm">
      <label for="name">Nome:</label>
      <input type="text" id="name" placeholder="Digite seu nome" required>

      <label for="age">Idade:</label>
      <input type="number" id="age" placeholder="Digite sua idade" required>

      <label for="obs">Observação:</label>
      <textarea id="obs" placeholder="Digite uma observação" required></textarea>

      <button type="submit">Enviar</button>
    </form>

    <h2>Pesquisar Pessoa</h2>
    <input type="text" id="search" placeholder="Digite um nome para pesquisar">
    
    <h2>Lista de Pessoas</h2>
    <div class="list" id="dataList"></div>
  </div>

  <script>
    const form = document.getElementById('dataForm');
    const dataList = document.getElementById('dataList');
    const search = document.getElementById('search');

    // Função para renderizar a lista
    function renderList(filter = '') {
      const savedData = JSON.parse(localStorage.getItem('dataList')) || [];
      dataList.innerHTML = '';

      const filteredData = savedData.filter(item =>
        item.name.toLowerCase().includes(filter.toLowerCase())
      );

      filteredData.forEach((item, index) => {
        const entry = document.createElement('div');
        entry.className = 'list-item';
        entry.innerHTML = `
          <p><strong>${index + 1}.</strong> Nome: <span>${item.name}</span></p>
          <p>Idade: <span>${item.age}</span></p>
          <p>Observação: <span>${item.obs}</span></p>
          <img 
            src="lixeira-ou-lixo-pode-simbolo-icone-em-fundo-escuro-400-120849870.jpg" 
            alt="Excluir" 
            class="delete-icon" 
            data-index="${index}" 
            title="Apagar">
        `;
        dataList.appendChild(entry);
      });

      // Adicionar evento de clique nas imagens de apagar
      const deleteIcons = document.querySelectorAll('.delete-icon');
      deleteIcons.forEach(icon => {
        icon.addEventListener('click', (event) => {
          const indexToDelete = event.target.getAttribute('data-index');
          deleteEntry(indexToDelete);
        });
      });
    }

    // Função para apagar uma entrada
    function deleteEntry(index) {
      const savedData = JSON.parse(localStorage.getItem('dataList')) || [];
      savedData.splice(index, 1);
      localStorage.setItem('dataList', JSON.stringify(savedData));
      renderList(search.value); // Atualizar a lista considerando o filtro atual
    }

    // Evento de envio do formulário
    form.addEventListener('submit', (event) => {
      event.preventDefault();

      const name = document.getElementById('name').value;
      const age = document.getElementById('age').value;
      const obs = document.getElementById('obs').value;

      let savedData = JSON.parse(localStorage.getItem('dataList')) || [];
      savedData.push({ name, age, obs });
      localStorage.setItem('dataList', JSON.stringify(savedData));

      form.reset();
      renderList();
    });

    // Evento de busca
    search.addEventListener('input', (event) => {
      const filter = event.target.value;
      renderList(filter);
    });

    // Renderizar a lista na inicialização
    renderList();
  </script>
</body>
</html>
